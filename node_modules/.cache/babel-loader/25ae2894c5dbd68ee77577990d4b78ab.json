{"ast":null,"code":"var _jsxFileName = \"/home/petteri/the_odin_project/memory-card/memory-card/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\nimport Card from \"./components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  //function to randomize cards\n  const [score, setScore] = useState(0);\n  const [hiScore, setHiScore] = useState(0);\n  const [cardArray, setCardArray] = useState([]); //function to randomize card order\n\n  const cards = [];\n\n  function randomizeCards() {\n    let position = 0;\n\n    for (let i = 1; i <= 12; i++) {\n      position = Math.floor(Math.random() * 2);\n\n      if (position === 0) {\n        cards.push(i);\n      } else {\n        cards.unshift(i);\n      }\n    }\n\n    return cards;\n  }\n\n  randomizeCards(); //Function to handle clicked cards\n\n  function cardClicked(e) {\n    if (cardArray.includes(e.target.alt)) {\n      setHiScore(score);\n      setScore(0);\n      setCardArray([]);\n    } else {\n      if (score < 11) {\n        setScore(score + 1);\n        setCardArray(cardArray.concat(e.target.alt));\n      } else if (score === 11) {\n        setScore(score + 1);\n        setHiScore(score);\n        alert(\"YOU THOUGHT YOU WON THE GAME BUT IT WAS ME, DIO!\");\n        setScore(0);\n        setCardArray([]);\n      }\n    }\n  } //Effect to randomize cards after every click\n\n\n  useEffect(() => {\n    randomizeCards();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Hi-Score: \", hiScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click a card! ...but only once!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Game, {\n      cardArray: cardArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"firstRow\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        id: cards[0],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: cards[1],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: cards[2],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: cards[3],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: cards[4],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: cards[5],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"secondRow\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        id: cards[6],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: cards[7],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: cards[8],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: cards[9],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: cards[10],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: cards[11],\n        cardClicked: cardClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qMAhoHo0petVChZAOccc1ihFuHU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/petteri/the_odin_project/memory-card/memory-card/src/App.js"],"names":["useState","useEffect","Game","Card","App","score","setScore","hiScore","setHiScore","cardArray","setCardArray","cards","randomizeCards","position","i","Math","floor","random","push","unshift","cardClicked","e","includes","target","alt","concat","alert"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\nimport Card from \"./components/Card\";\n\nfunction App() {\n  //const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  //function to randomize cards\n\n  const [score, setScore] = useState(0);\n  const [hiScore, setHiScore] = useState(0);\n  const [cardArray, setCardArray] = useState([]);\n\n  //function to randomize card order\n  const cards = [];\n  function randomizeCards() {\n    let position = 0;\n    for (let i = 1; i <= 12; i++) {\n      position = Math.floor(Math.random() * 2);\n      if (position === 0) {\n        cards.push(i);\n      } else {\n        cards.unshift(i);\n      }\n    }\n    return cards;\n  }\n  randomizeCards();\n\n  //Function to handle clicked cards\n  function cardClicked(e) {\n    if (cardArray.includes(e.target.alt)) {\n      setHiScore(score);\n      setScore(0);\n      setCardArray([]);\n    } else {\n      if (score < 11) {\n        setScore(score + 1);\n        setCardArray(cardArray.concat(e.target.alt));\n      } else if (score === 11) {\n        setScore(score + 1);\n        setHiScore(score);\n        alert(\"YOU THOUGHT YOU WON THE GAME BUT IT WAS ME, DIO!\");\n        setScore(0);\n        setCardArray([]);\n      }\n    }\n  }\n\n  //Effect to randomize cards after every click\n  useEffect(() => {\n    randomizeCards();\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Memory game</h1>\n      <h3>Score: {score}</h3>\n      <h3>Hi-Score: {hiScore}</h3>\n      <p>Click a card! ...but only once!</p>\n      <Game cardArray={cardArray} />\n      <div className=\"firstRow\">\n        <Card id={cards[0]} cardClicked={cardClicked} />\n        <Card id={cards[1]} cardClicked={cardClicked} />\n        <Card id={cards[2]} cardClicked={cardClicked} />\n        <Card id={cards[3]} cardClicked={cardClicked} />\n        <Card id={cards[4]} cardClicked={cardClicked} />\n        <Card id={cards[5]} cardClicked={cardClicked} />\n      </div>\n      <div className=\"secondRow\">\n        <Card id={cards[6]} cardClicked={cardClicked} />\n        <Card id={cards[7]} cardClicked={cardClicked} />\n        <Card id={cards[8]} cardClicked={cardClicked} />\n        <Card id={cards[9]} cardClicked={cardClicked} />\n        <Card id={cards[10]} cardClicked={cardClicked} />\n        <Card id={cards[11]} cardClicked={cardClicked} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}