{"ast":null,"code":"var _jsxFileName = \"/home/petteri/the_odin_project/memory-card/memory-card/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\nimport Card from \"./components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  //function to randomize cards\n  const [score, setScore] = useState(0);\n  const [hiScore, setHiScore] = useState(0);\n  const [cardArray, setCardArray] = useState([]); //function to randomize card order\n\n  function randomizeCards() {\n    const cards = [];\n    let position = 0;\n\n    for (let i = 1; i <= 12; i++) {\n      position = Math.floor(Math.random() * 2);\n\n      if (position === 0) {\n        cards.push(i);\n      } else {\n        cards.unshift(i);\n      }\n    }\n\n    return cards;\n  }\n\n  console.log(randomizeCards()); //Effect to randomize cards after every click\n\n  useEffect(() => {\n    randomizeCards();\n  }); //Temporary function for testing\n\n  function updateScore() {\n    setScore(score + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Hi-Score: \", hiScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click a card! ...but only once!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Game, {\n      cardArray: cardArray,\n      updateScore: updateScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qMAhoHo0petVChZAOccc1ihFuHU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/petteri/the_odin_project/memory-card/memory-card/src/App.js"],"names":["useState","useEffect","Game","Card","App","score","setScore","hiScore","setHiScore","cardArray","setCardArray","randomizeCards","cards","position","i","Math","floor","random","push","unshift","console","log","updateScore"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C,CANa,CAQb;;AACA,WAASW,cAAT,GAA0B;AACxB,UAAMC,KAAK,GAAG,EAAd;AACA,QAAIC,QAAQ,GAAG,CAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BD,MAAAA,QAAQ,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAX;;AACA,UAAIJ,QAAQ,KAAK,CAAjB,EAAoB;AAClBD,QAAAA,KAAK,CAACM,IAAN,CAAWJ,CAAX;AACD,OAFD,MAEO;AACLF,QAAAA,KAAK,CAACO,OAAN,CAAcL,CAAd;AACD;AACF;;AACD,WAAOF,KAAP;AACD;;AACDQ,EAAAA,OAAO,CAACC,GAAR,CAAYV,cAAc,EAA1B,EAtBa,CAwBb;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc;AACf,GAFQ,CAAT,CAzBa,CA6Bb;;AACA,WAASW,WAAT,GAAuB;AACrBhB,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,4BAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,+BAAeE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEE,SAAjB;AAA4B,MAAA,WAAW,EAAEa;AAAzC;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA5CQlB,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\nimport Card from \"./components/Card\";\n\nfunction App() {\n  //const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  //function to randomize cards\n\n  const [score, setScore] = useState(0);\n  const [hiScore, setHiScore] = useState(0);\n  const [cardArray, setCardArray] = useState([]);\n\n  //function to randomize card order\n  function randomizeCards() {\n    const cards = [];\n    let position = 0;\n    for (let i = 1; i <= 12; i++) {\n      position = Math.floor(Math.random() * 2);\n      if (position === 0) {\n        cards.push(i);\n      } else {\n        cards.unshift(i);\n      }\n    }\n    return cards;\n  }\n  console.log(randomizeCards());\n\n  //Effect to randomize cards after every click\n  useEffect(() => {\n    randomizeCards();\n  });\n\n  //Temporary function for testing\n  function updateScore() {\n    setScore(score + 1);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Memory game</h1>\n      <h3>Score: {score}</h3>\n      <h3>Hi-Score: {hiScore}</h3>\n      <p>Click a card! ...but only once!</p>\n      <Game cardArray={cardArray} updateScore={updateScore} />\n      <Card />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}